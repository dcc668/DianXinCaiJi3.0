package com.example.util;import java.io.File;import java.io.FileNotFoundException;import java.io.FileReader;import java.util.HashMap;import java.util.Iterator;import java.util.Map;import java.util.Properties;import org.dom4j.Attribute;import org.dom4j.Document;import org.dom4j.DocumentException;import org.dom4j.Element;import org.dom4j.io.SAXReader;public class XmlParser {//	分别获取6个模块各自的数据	public static Properties getDBStoreProperty(){		return getProperties("dbstore");	}  		public static Properties getServerProperty(){		return getProperties("server");	} 		public static Properties getClientProperty(){		return getProperties("client");	} 		public static Properties getBackupProperty(){		return getProperties("backup");	} 		public static Properties getLoggerProperty(){		return getProperties("logger");	} 		public static Properties getGatherProperty(){		return getProperties("gather");	} 		//获取所有	模块对象	public static Map<String,Object> getAllModuls(){		Map<String,Object> moduls=new HashMap<>();				try {						Element root=getRootElement();						Iterator it=root.elementIterator();						while(it.hasNext()){								Element ele=(Element)it.next();								String name=ele.getName();								Attribute attr=ele.attribute("class");								String cName=attr.getValue();								Object obj=Class.forName(cName).newInstance();								moduls.put(name,obj);						}					} catch (InstantiationException e) {						// TODO Auto-generated catch block						e.printStackTrace();					} catch (IllegalAccessException e) {						// TODO Auto-generated catch block						e.printStackTrace();					} catch (ClassNotFoundException e) {						// TODO Auto-generated catch block						e.printStackTrace();					}			return moduls;	}		private static Properties getProperties(String eleName){			Element root=getRootElement();			Element eles=root.element(eleName);			Iterator it=eles.elementIterator();			Properties pro=new Properties();			while(it.hasNext()){				Element ele=(Element)it.next();				String name=ele.getName();				String value=ele.getTextTrim();				System.out.println(name+"--->"+value);				pro.setProperty(name, value);			}			return pro;	}	private static Element getRootElement(){		Element root=null;		FileReader read=null;		try {			read = new FileReader(new File("src/conf.xml"));		} catch (FileNotFoundException e1) {			// TODO Auto-generated catch block			e1.printStackTrace();		}		SAXReader sax=new SAXReader();				//不去网络中去读dtd	//		sax.setEntityResolver(new EntityResolver() {//			@Override//			public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {//				byte[]bs="<!DOCTYPE  woss  PUBLIC '-//mydtd.com//DTD Config 1.0//EN''http://mydtd.com/dtd/conf_dtd.dtd'>".getBytes();//				return new InputSource(new ByteArrayInputStream(bs));//			}//		});						try {				Document doc = sax.read(read);				root=doc.getRootElement();		} catch (DocumentException e) {			// TODO Auto-generated catch block			e.printStackTrace();		}		return root;	}	public static void main(String[] args) {//		getClientProperty();		getAllModuls();	}}